name: Run the unit tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# âœ… Top-level permissions to allow pushing to GHCR
permissions:
  contents: read
  packages: write

jobs:
  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        uses: ./.github/actions/install-dependencies

      - name: Run pytest
        run: |
          pytest

  runmigrations:
    name: Apply migrations
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        uses: ./.github/actions/install-dependencies

      - name: Run Django migrate
        run: |
          python manage.py migrate

  runmigrations-check:
    name: Check for pending migrations
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        uses: ./.github/actions/install-dependencies

      - name: Check for missing migrations
        run: |
          python manage.py makemigrations --check --dry-run --verbosity 2

  build-docker-image:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    needs: [test, runmigrations, runmigrations-check]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          push: true
          labels: ${{ steps.meta.outputs.labels }}
